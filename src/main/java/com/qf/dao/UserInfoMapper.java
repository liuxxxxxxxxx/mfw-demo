package com.qf.dao;

import com.qf.pojo.po.UserInfo;
import com.qf.pojo.po.UserInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    long countByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int deleteByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int insertSelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    List<UserInfo> selectByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    UserInfo selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int updateByExampleSelective(@Param("record") UserInfo record, @Param("example") UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int updateByExample(@Param("record") UserInfo record, @Param("example") UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int updateByPrimaryKeySelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
<<<<<<< Updated upstream
     * @mbg.generated Wed Dec 19 22:31:05 CST 2018
=======
     * @mbg.generated Thu Dec 20 09:31:38 CST 2018
>>>>>>> Stashed changes
     */
    int updateByPrimaryKey(UserInfo record);
}